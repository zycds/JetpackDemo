apply plugin: rootProject.ext.plugins.bintray
apply plugin: rootProject.ext.plugins.maven
version = rootProject.ext.bintray.version

def siteUrl = rootProject.ext.bintray.siteUrl
def gitUrl = rootProject.ext.bintray.gitUrl

group = rootProject.ext.bintray.group

install {
    repositories.mavenInstaller {
        repositories.mavenDeployer {
            repository(url : uri('../respository'))
//            pom.groupId = rootProject.ext.bintray.group
//            pom.artifactId = rootProject.ext.bintray.name
//            pom.version = rootProject.ext.bintray.version
        }
        repositories {
            mavenDeployer {
                repository(url : "http://localhost:8081/repository/maven-releases/") {
                    authentication(userName: "zhangyc", password : "zhangyc1991")
                }
//                pom.groupId = rootProject.ext.bintray.group
//                pom.artifactId = rootProject.ext.bintray.name
//                pom.version = rootProject.ext.bintray.version
            }
        }
        pom {
            project {
                packaging rootProject.ext.bintray.packaging
                name rootProject.ext.bintray.name
                description rootProject.ext.bintray.description
                groupId rootProject.ext.bintray.group
                artifactId rootProject.ext.bintray.name
                version rootProject.ext.bintray.version
                url siteUrl
                licenses {
                    license {
                        name rootProject.ext.bintray.licenseName
                        url rootProject.ext.bintray.licenseUrl
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id rootProject.ext.bintray.developerId
                        name rootProject.ext.bintray.developerName
                        email rootProject.ext.bintray.developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

if (project.getPlugins().hasPlugin("com.android.application") ||
        project.getPlugins().hasPlugin("com.android.library")) {
    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.source
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        failOnError false
    }
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.source
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    javadoc {
        options{
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
            links "https://androiddoc.qiniudn.com/reference/"
            title "$PROJ_NAME $PROJ_VERSION"
        }
    }
}
artifacts {
    archives sourcesJar
    archives javadocJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = rootProject.ext.bintray.bintrayUser
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = rootProject.ext.bintray.bintrayRepo
        name = rootProject.ext.bintray.binrayLibrary
        userOrg = rootProject.ext.bintray.bintrayUser
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = [rootProject.ext.bintray.bintrayLicense]
        publish = true
        publicDownloadNumbers = true
    }
}